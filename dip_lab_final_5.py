# -*- coding: utf-8 -*-
"""DIP_Lab-Final-5.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1vGbCWlXOCH4jouH_TSjF_MBw7AufNCgN
"""

#Perform Erosion on a image such that all balls get separated from each other

import cv2
import numpy as np
import matplotlib.pyplot as plt
from urllib.request import urlopen
from matplotlib import pyplot as plt

# Load the image from URL
url = 'https://i.ibb.co/pykT4rH/dip.png'  # Direct link to the image file
resp = urlopen(url)
image = np.asarray(bytearray(resp.read()), dtype="uint8")
image = cv2.imdecode(image, cv2.IMREAD_GRAYSCALE)

# Set up a kernel for erosion
kernel = np.ones((8, 8), np.uint8)  # You can adjust the size of the kernel

# Perform erosion
eroded_image = cv2.erode(image, kernel, iterations=4)

# Display the original and eroded images side by side
plt.figure(figsize=(8, 4))
plt.subplot(1, 2, 1)
plt.title('Original Image')
plt.imshow(image, cmap='gray')

plt.subplot(1, 2, 2)
plt.title('Erosion Image')
plt.imshow(eroded_image, cmap='gray')

plt.show()

import cv2
import numpy as np
import matplotlib.pyplot as plt
from urllib.request import urlopen

# Load the image from URL
url = 'https://i.ibb.co/9cgkhY0/dip1.png'
resp = urlopen(url)
image = np.asarray(bytearray(resp.read()), dtype="uint8")
image = cv2.imdecode(image, cv2.IMREAD_GRAYSCALE)

# Display the original image, eroded image, and dilated image side by side
plt.figure(figsize=(15, 5))

# Original Image
plt.subplot(1, 3, 1)
plt.title('Original Image')
plt.imshow(image, cmap='gray')

# Apply Erosion
kernel_size = 3
kernel = np.ones((kernel_size, kernel_size), np.uint8)
eroded_image = cv2.erode(image, kernel, iterations=1)

# Apply Dilation
dilated_image = cv2.dilate(eroded_image, kernel, iterations=2)

# Display the dilated image
plt.subplot(1, 3, 2)
plt.title('Eroded Image')
plt.imshow(eroded_image, cmap='gray')

# Display the dilated image
plt.subplot(1, 3, 3)
plt.title('Dilated Image')
plt.imshow(dilated_image, cmap='gray')

plt.show()

import cv2
import numpy as np
import matplotlib.pyplot as plt
from urllib.request import urlopen

# Load the image from URL
url = 'https://i.ibb.co/hMx1mnF/habibb2rdip2.png'
resp = urlopen(url)
image = np.asarray(bytearray(resp.read()), dtype="uint8")
image = cv2.imdecode(image, cv2.IMREAD_GRAYSCALE)

# Define a 3x3 kernel for dilation and erosion
kernel = np.ones((3, 3), np.uint8)

# Perform grayscale dilation
dilated_image = cv2.dilate(image, kernel, iterations=2)

# Perform grayscale erosion
eroded_image = cv2.erode(image, kernel, iterations=1)

# Calculate the morphological gradient
gradient_image = cv2.morphologyEx(image, cv2.MORPH_GRADIENT, kernel)

# Display the images in one row
fig, axs = plt.subplots(1, 4 , figsize=(16, 4))

# Original Image
axs[0].imshow(image, cmap='gray')
axs[0].set_title('Original Image')

# Eroded Image
axs[1].imshow(eroded_image, cmap='gray')
axs[1].set_title('Eroded Image')

# Dilated Image
axs[2].imshow(dilated_image, cmap='gray')
axs[2].set_title('Dilated Image')

# Morphological Gradient
axs[3].imshow(gradient_image, cmap='gray')
axs[3].set_title('Morphological Gradient')

plt.show()